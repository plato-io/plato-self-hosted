apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: plato
  labels:
    name: postgres-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 60Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: plato
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - command:
        - bash
        - -c
        - |
            echo "CREATE ROLE plato_api;" > \
                /docker-entrypoint-initdb.d/create_plato_role.sql
            exec docker-entrypoint.sh \
                --listen_addresses='*' \
                --log_destination='stderr' \
                --log_statement='none'

        env:
        - name: POSTGRES_DB
          value: plato
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: plato
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets
              key: postgres_password
        name: postgres
        image: postgres:13-alpine
        resources: {}

        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          subPath: postgres
          name: postgres-pv

        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
          initialDelaySeconds: 5
          periodSeconds: 5

      restartPolicy: Always
      volumes:
      - name: postgres-pv
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: plato
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 51870
    targetPort: 0
  selector:
    app: postgres
